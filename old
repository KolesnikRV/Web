

app.post('/new-event', urlencodedParser, function (req, res) {

	Users.findOne({ where: { id: TemporaryID } }).then(function (user) {
		console.log(TemporaryID);
		Events.create({
			userid: user.dataValues.id,
			eventname: req.body.event_name,
			event: req.body.event_description

		}).catch((err) => {
			console.log(err);
			res.render('/index');
		});

	});
	findAllEvents(res);
});

app.post('/index', urlencodedParser, function (req, res) {

	Users.findOne({ where: { email: req.body.email } }).then(function (user) {

		if (req.body.actiontype == 'register') {
			console.log('registeration-------')
			if (user == null) {
				Users.create({
					email: req.body.email,
					password: req.body.password
				}).catch((err) => {
					console.log(err);
					Users.findOne({ where: { email: req.body.email } }).then(function (user) {

						UserSession.set(req.sessionID, UserData = [user.dataValues.id]);
						TemporaryID = user.dataValues.id;
						TemporaryEmail = req.body.email;
						findAllEvents(res);
					});

				});
			} else res.render('pages/login');
		} else if (req.body.actiontype == 'login') {
			console.log('login-------');
			if (user == null) {
				console.log('user does not exist');
				res.render('pages/login');
			} else {
				TemporaryEmail = user.dataValues.email;
				TemporaryID = user.dataValues.id;
				req.session.save();
				console.log(TemporaryID);
				findAllEvents(res);
			}
		}

	}); //findAll
});

TemporaryID = 0;

function findAllEvents(res) {
	Events.findAll({ where: { userid: TemporaryID } }).then(function (event) {

		function TempEvents(name, event) {
			this.name = name;
			this.event = event;
		};
		var eventArr = new Array();

		for (i = 0; i < event.length; i++) {

			eventArr[i] = new TempEvents('1~', event[i].dataValues.event);
			console.log(eventArr[i]);
		}
		res.render('pages/index', { user: TemporaryEmail, events: eventArr });
	});
};